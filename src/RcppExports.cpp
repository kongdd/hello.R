// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// getEigenValues
arma::vec getEigenValues(arma::mat M);
RcppExport SEXP _hello_R_getEigenValues(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(getEigenValues(M));
    return rcpp_result_gen;
END_RCPP
}
// arrayC
NumericVector arrayC(NumericVector input, IntegerVector dim);
RcppExport SEXP _hello_R_arrayC(SEXP inputSEXP, SEXP dimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type input(inputSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dim(dimSEXP);
    rcpp_result_gen = Rcpp::wrap(arrayC(input, dim));
    return rcpp_result_gen;
END_RCPP
}
// arr3d
void arr3d(arma::cube forcing_3d, NumericMatrix soil_par_mat, List forcing_veg_list);
RcppExport SEXP _hello_R_arr3d(SEXP forcing_3dSEXP, SEXP soil_par_matSEXP, SEXP forcing_veg_listSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type forcing_3d(forcing_3dSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type soil_par_mat(soil_par_matSEXP);
    Rcpp::traits::input_parameter< List >::type forcing_veg_list(forcing_veg_listSEXP);
    arr3d(forcing_3d, soil_par_mat, forcing_veg_list);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hello_R_getEigenValues", (DL_FUNC) &_hello_R_getEigenValues, 1},
    {"_hello_R_arrayC", (DL_FUNC) &_hello_R_arrayC, 2},
    {"_hello_R_arr3d", (DL_FUNC) &_hello_R_arr3d, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_hello_R(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
